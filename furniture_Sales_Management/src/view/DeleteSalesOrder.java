/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import Classes.File;
import Classes.SalesOrder;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aryssa
 */
public class DeleteSalesOrder extends javax.swing.JPanel {
    MainPage parent;
    private DefaultTableModel temp;
    /**
     * Creates new form PersonalSales
     */
    public DeleteSalesOrder() {
        initComponents();
    }

    public DeleteSalesOrder(MainPage parent) {
        initComponents();
        this.parent = parent;
        loadDataTable();
    }
    private void loadDataTable(){
        populateTable();
    }
    public void populateTable() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                temp = (DefaultTableModel) tblQuotation2.getModel();
                temp.setRowCount(0);
                Object row[] = new Object[6];
                for (SalesOrder sales : SalesOrder.salesOrders) {
                    // Filter sales orders based on the logged-in salesperson's ID
                    
                        row[0] = sales.getId();
                        row[1] = sales.getFurniture();
                        row[2] = sales.getQuantity();
                        row[3] = sales.getTotal();
                        row[4] = sales.getCustomer();
                        row[5] = sales.getStatus();
                        temp.addRow(row);
                    
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblOrderID = new javax.swing.JLabel();
        tfOrderID1 = new javax.swing.JTextField();
        btnSaveChanges = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuotation2 = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DELETE SALES ORDER QUOTATION");

        lblOrderID.setText("ORDER ID");

        tfOrderID1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfOrderID1KeyTyped(evt);
            }
        });

        btnSaveChanges.setText("SAVE CHANGES");
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });

        tblQuotation2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ORDER ID", "FURNITURE ID", "QUANTITY", "TOTAL", "CUSTOMER ID", "STATUS"
            }
        ));
        jScrollPane1.setViewportView(tblQuotation2);

        btnBack.setText("BACK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblOrderID)
                .addGap(34, 34, 34)
                .addComponent(tfOrderID1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveChanges))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOrderID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID)
                    .addComponent(btnSaveChanges))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfOrderID1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfOrderID1KeyTyped
        if((int)evt.getKeyChar()== 10){
             displayOrderDetails(tfOrderID1.getText());
        }
    }//GEN-LAST:event_tfOrderID1KeyTyped
    private boolean validateInput(){
    // Validate OrderID text field
    String quotationIDText = tfOrderID1.getText().trim();
    if (quotationIDText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Order ID cannot be empty.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
        return true;
}
    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed
        if (!validateInput()) {
            JOptionPane.showMessageDialog(this, "Please enter an Order ID!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        deleteOrder(tfOrderID1.getText());
    }//GEN-LAST:event_btnSaveChangesActionPerformed
    
    private void displayOrderDetails(String selectedOrderId) {
    DefaultTableModel model = (DefaultTableModel) tblQuotation2.getModel();
    model.setRowCount(0); // Clear existing data in the table

    // Find the order with the selected order ID in the SalesOrder list
    for (SalesOrder sales : SalesOrder.salesOrders) {
        if (sales.getId().equals(selectedOrderId)) {
            // Add details to the table
            Object[] rowData = {sales.getId(), sales.getFurniture(), sales.getQuantity(),
                    sales.getTotal(), sales.getCustomer(), sales.getStatus()};
            model.addRow(rowData);
            return;
        }
    }
    }
    
    private void deleteOrder(String selectedOrderId) {
    SalesOrder selectedOrder = null;
    for (SalesOrder sales : SalesOrder.salesOrders) {
        if (sales.getId().equals(selectedOrderId)) {
            selectedOrder = sales;
            break;
        }
    }

    // If the order is found, remove it from the list
    if (selectedOrder != null) {
        SalesOrder.salesOrders.remove(selectedOrder);

        // Save the updated data to the file
        File.write("salesOrder", SalesOrder.salesOrders);

        //Display table again after delete
        populateTable();

        // Display a message indicating that the order is deleted
        JOptionPane.showMessageDialog(this, "Order deleted successfully!");
    } else {
        // If the order is not found, display an error message
        JOptionPane.showMessageDialog(this, "Order not found", "Error", JOptionPane.ERROR_MESSAGE);
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrderID;
    private javax.swing.JTable tblQuotation2;
    private javax.swing.JTextField tfOrderID1;
    // End of variables declaration//GEN-END:variables
}
