/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import Classes.File;
import Classes.Furniture;
import Classes.SalesOrder;
import javax.swing.DefaultComboBoxModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aryssa
 */
public class ModifySalesOrder extends javax.swing.JPanel {
    int quantity;
    double price;
    
    MainPage parent;
    private DefaultTableModel temp; 
    private SalesOrder selectedOrder;  // To store the details of the selected order


    /**
     * Creates new form ModifySalesOrder
     */
    public ModifySalesOrder() {
        initComponents();
    }
    public ModifySalesOrder(MainPage parent){
            initComponents();
            this.parent = parent;
            LoadData();
            loadDataTable();
    }
    
    private void loadDataTable(){
        populateTable();
    }
    public void populateTable() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                temp = (DefaultTableModel) tblQuotation1.getModel();
                temp.setRowCount(0);
                Object row[] = new Object[6];
                for (SalesOrder sales : SalesOrder.salesOrders) {
                    // Filter sales orders based on the logged-in salesperson's ID
                    
                        row[0] = sales.getId();
                        row[1] = sales.getFurniture();
                        row[2] = sales.getQuantity();
                        row[3] = sales.getTotal();
                        row[4] = sales.getCustomer();
                        row[5] = sales.getStatus();
                        temp.addRow(row);
                    
                }
            }
        });
    }
    private void LoadData(){
    List<String> idList = new ArrayList<>();
        for (Furniture furniture: Furniture.list){
            idList.add(furniture.getId());
        }
    DefaultComboBoxModel data = new DefaultComboBoxModel<>(idList.toArray(new String [0]));
    tfFurnitureID.setModel(data);   
    }
    
    private void displayOrderDetails(String selectedOrderId) {
    DefaultTableModel model = (DefaultTableModel) tblQuotation1.getModel();
    model.setRowCount(0); // Clear existing data in the table

    // Find the order with the selected order ID in the SalesOrder list
    for (SalesOrder sales : SalesOrder.salesOrders) {
        if (sales.getId().equals(selectedOrderId)) {
            // Add details to the table
            Object[] rowData = {sales.getId(), sales.getFurniture(), sales.getQuantity(),
                    sales.getTotal(), sales.getCustomer(), sales.getStatus()};
            model.addRow(rowData);

            // Set the selectedOrder to the current order
            selectedOrder = sales;
            return;
        }
    }

    // If order is not found
    JOptionPane.showMessageDialog(this, "Order not found", "Not Found", JOptionPane.INFORMATION_MESSAGE);
}
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfOrderID = new javax.swing.JTextField();
        lblOrderID = new javax.swing.JLabel();
        lblFurnitureID = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        tfTotal = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        lblCustomerID = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfCustomerID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuotation1 = new javax.swing.JTable();
        btnSaveChanges = new javax.swing.JButton();
        tfFurnitureID = new javax.swing.JComboBox<>();
        tfQuantity = new javax.swing.JSpinner();
        btnBack = new javax.swing.JButton();

        setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MODIFY SALES ORDER QUOTATION");

        tfOrderID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOrderIDActionPerformed(evt);
            }
        });
        tfOrderID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfOrderIDKeyTyped(evt);
            }
        });

        lblOrderID.setText("ORDER ID");

        lblFurnitureID.setText("FURNITURE ID");

        lblQuantity.setText("QUANTITY");

        lblTotal.setText("TOTAL");

        lblCustomerID.setText("CUSTOMER ID");

        lblStatus.setText("STATUS");

        jLabel8.setText("WAITING FOR APPROVAL");

        tblQuotation1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ORDER ID", "FURNITURE ID", "QUANTITY", "TOTAL", "CUSTOMER", "STATUS"
            }
        ));
        jScrollPane1.setViewportView(tblQuotation1);

        btnSaveChanges.setText("SAVE CHANGES");
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });

        tfFurnitureID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tfFurnitureID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFurnitureIDActionPerformed(evt);
            }
        });

        tfQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tfQuantityStateChanged(evt);
            }
        });

        btnBack.setText("BACK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOrderID)
                    .addComponent(lblFurnitureID)
                    .addComponent(lblQuantity)
                    .addComponent(lblTotal)
                    .addComponent(lblCustomerID)
                    .addComponent(lblStatus)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfTotal)
                    .addComponent(tfQuantity)
                    .addComponent(tfCustomerID)
                    .addComponent(tfOrderID)
                    .addComponent(tfFurnitureID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSaveChanges, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFurnitureID)
                            .addComponent(tfFurnitureID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuantity)
                            .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal)
                            .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCustomerID)
                            .addComponent(tfCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStatus)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveChanges)
                            .addComponent(btnBack))
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tfQuantityStateChanged
        // TODO add your handling code here:
       quantity = (int)tfQuantity.getValue();
       calculateTotal();
    }//GEN-LAST:event_tfQuantityStateChanged

    private void tfOrderIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfOrderIDActionPerformed
        // TODO add your handling code here:
        String enteredOrderId = tfOrderID.getText();
        displayOrderDetails(enteredOrderId);
        System.out.println("Entered Order ID: " + enteredOrderId);
    }//GEN-LAST:event_tfOrderIDActionPerformed

    private void tfOrderIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfOrderIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfOrderIDKeyTyped

    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed
        // TODO add your handling code here:
        // Validate that an order is selected
        if (selectedOrder == null) {
        JOptionPane.showMessageDialog(this, "Please select an order to modify", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validate input
    if (!validateInput()) {
        JOptionPane.showMessageDialog(this, "Please enter valid data for quantity and total.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Retrieve modified data
    String furniture = (String) tfFurnitureID.getSelectedItem();
    int amount = (int) tfQuantity.getValue();
    double total = Double.parseDouble(tfTotal.getText());
    String customer = tfCustomerID.getText();

    // Update the selected order details
    selectedOrder.setFurniture(furniture);
    selectedOrder.setQuantity(amount);
    selectedOrder.setTotal(total);
    selectedOrder.setCustomer(customer);
    selectedOrder.setStatus("Pending");
    selectedOrder.setGeneratedBy(parent.user.getId()); // Set the generatedBy field
    selectedOrder.setApprovedBy(""); // Leave the approvedBy field empty for now

    // Save the changes to file
    File.write("salesOrder", SalesOrder.salesOrders);

    JOptionPane.showMessageDialog(this, "Changes saved successfully!");

    // Reload the table to reflect the changes
    displayOrderDetails(selectedOrder.getId());
    
    }//GEN-LAST:event_btnSaveChangesActionPerformed

    private void tfFurnitureIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFurnitureIDActionPerformed
        // TODO add your handling code here:
        String furniture = (String) tfFurnitureID.getSelectedItem();
        for (Furniture record: Furniture.list){
            if (record.getId().equals(furniture)){
               price = record.getPrice();
            }
        }
        calculateTotal();
    }//GEN-LAST:event_tfFurnitureIDActionPerformed
    
     private void calculateTotal(){
     tfTotal.setText(Double.toString(price*quantity));
    }
     
private boolean validateInput() {
    try {
        double total = Double.parseDouble(tfTotal.getText());
        return true;
    } catch (NumberFormatException e) {
        return false;
    }
}      
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCustomerID;
    private javax.swing.JLabel lblFurnitureID;
    private javax.swing.JLabel lblOrderID;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblQuotation1;
    private javax.swing.JTextField tfCustomerID;
    private javax.swing.JComboBox<String> tfFurnitureID;
    private javax.swing.JTextField tfOrderID;
    private javax.swing.JSpinner tfQuantity;
    private javax.swing.JTextField tfTotal;
    // End of variables declaration//GEN-END:variables
}
