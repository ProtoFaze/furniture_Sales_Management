/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import Classes.SalesOrder;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aryssa
 */
public class SearchSalesOrder extends javax.swing.JPanel {
    MainPage parent;
    private DefaultTableModel temp;
    /**
     * Creates new form SearchSalesOrder
     */
    public SearchSalesOrder() {
        initComponents();
    }
    public SearchSalesOrder(MainPage parent) {
        initComponents();
        this.parent = parent;
        loadData();
    }
    
    private void loadData(){
        populateTable();
    }
    public void populateTable(){
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                temp = (DefaultTableModel) tblQuotationSearch.getModel();
                temp.setRowCount(0);
                Object row[] = new Object[6]; 
                for (SalesOrder sales : SalesOrder.salesOrders) {
                    //add to new temp table if room is available
                    row[0] = sales.getId();
                    row[1] = sales.getFurniture();
                    row[2] = sales.getQuantity();
                    row[3] = sales.getTotal();
                    row[4] = sales.getCustomer();
                    row[5] = sales.getStatus();
                    temp.addRow(row);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSearchSalesOrder = new javax.swing.JLabel();
        tfOrderIDsearch = new javax.swing.JTextField();
        lblOrderID1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuotationSearch = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setOpaque(false);

        lblSearchSalesOrder.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblSearchSalesOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearchSalesOrder.setText("SEARCH SALES ORDER QUOTATION");

        tfOrderIDsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOrderIDsearchActionPerformed(evt);
            }
        });

        lblOrderID1.setText("ORDER ID");

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblQuotationSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ORDER ID", "FURNITURE ID", "QUANTITY", "TOTAL", "CUSTOMER ID", "STATUS"
            }
        ));
        jScrollPane1.setViewportView(tblQuotationSearch);

        btnBack.setText("BACK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(47, 47, 47)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOrderID1)
                        .addGap(40, 40, 40)
                        .addComponent(tfOrderIDsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE))
            .addComponent(lblSearchSalesOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblSearchSalesOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfOrderIDsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOrderID1))
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch)
                            .addComponent(btnBack))
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //Get order ID from text field
        String orderIDsearch = tfOrderIDsearch.getText();     
        List<SalesOrder> searchQuotationDetails = SalesOrder.searchOrders(orderIDsearch,"orderID");
        
        if(searchQuotationDetails != null){
            JOptionPane.showMessageDialog(this, "Order ID Found!");
            updateTable(searchQuotationDetails);
        }
        else{
            JOptionPane.showMessageDialog(this, "Order ID Not Found!");
        }             
    }//GEN-LAST:event_btnSearchActionPerformed
    
    private void updateTable(List<SalesOrder> data) {
        temp.setRowCount(0);
        // Create a new array with the expected size for the table model
        Object[] row = new Object[temp.getColumnCount()];

        // Fill in the values from the parts array, set empty string for missing values
        for (SalesOrder sales: data) {
            row[0] = sales.getId();
            row[1] = sales.getFurniture();
            row[2] = sales.getQuantity();
            row[3] = sales.getTotal();
            row[4] = sales.getCustomer();
            row[5] = sales.getStatus();
            temp.addRow(row);
    //        } else {
    //            row[i] = ""; // Set empty string for unknown columns
    //        }
            }

            // Add the row to the table model
        }

    private void tfOrderIDsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfOrderIDsearchActionPerformed
        // TODO add your handling code here:
        String orderIDsearch = tfOrderIDsearch.getText();
    }//GEN-LAST:event_tfOrderIDsearchActionPerformed
  private String searchOrderIDinFile(String orderIDsearch) {
     try (BufferedReader br = new BufferedReader(new FileReader("salesOrder.txt"))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                String orderIDFromFile = parts[0].trim(); // Assuming order ID is the first value in each line
                if (orderIDFromFile.equals(orderIDsearch)) {
                    System.out.println("Sales Order found:\n" + line);
                    return line; // Return the details of the sales order
                }
            }

        } catch (IOException e) {
            e.printStackTrace(); // Handle the exception according to your needs
        }

        System.out.println("Sales Order with ID " + orderIDsearch + " not found!!");
        return null; // Order ID not found in the file or an error occurred
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrderID1;
    private javax.swing.JLabel lblSearchSalesOrder;
    private javax.swing.JTable tblQuotationSearch;
    private javax.swing.JTextField tfOrderIDsearch;
    // End of variables declaration//GEN-END:variables
}
