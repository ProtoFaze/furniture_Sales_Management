/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import Classes.Furniture;
import Classes.SalesOrder;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aryssa
 */
public class SearchQuotation extends javax.swing.JPanel {
    MainPage parent;
    private DefaultTableModel temp; 
    /**
     * Creates new form SearchQuotation
     */
    public SearchQuotation() {
        initComponents();
    }
    public SearchQuotation(MainPage parent) {
        initComponents();
        this.parent = parent;
        loadData();
    }
    
    private void loadData(){
        populateTable();
    }
    public void populateTable(){
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                temp = (DefaultTableModel) tblQuotation.getModel();
                temp.setRowCount(0);
                Object row[] = new Object[7]; 
                for (SalesOrder sales : SalesOrder.salesOrders) {
                    //add to new temp table if room is available
                    row[0] = sales.getId();
                    row[1] = sales.getFurniture();
                    row[2] = sales.getQuantity();
                    // Find the Furniture object using the furniture ID
                Furniture matchingFurniture = findFurnitureById(sales.getFurniture());

                if (matchingFurniture != null) {
                    // Display unit price
                    row[3] = matchingFurniture.getPrice();
                } else {
                    row[3] = ""; // Set as empty if furniture is not found
                }
                    row[4] = sales.getTotal();
                    row[5] = sales.getCustomer();
                    row[6] = sales.getquotation();
                    temp.addRow(row);
                }
            }
        });
    }
    private Furniture findFurnitureById(String furnitureId) {
    for (Furniture furniture : Furniture.list) {
        if (furniture.getId().equals(furnitureId)) {
            return furniture;
        }
    }
    return null;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfquotationID = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuotation = new javax.swing.JTable();
        tfTotalPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("SEARCH QUOTATION");

        jLabel2.setText("QUOTATION ID");

        tfquotationID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfquotationIDActionPerformed(evt);
            }
        });

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblQuotation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ORDER ID", "FURNITURE ID", "QUANTITY", "UNIT PRICE", "TOTAL COST", "CUSTOMER ID", "QUOTATION ID"
            }
        ));
        jScrollPane1.setViewportView(tblQuotation);

        tfTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTotalPriceActionPerformed(evt);
            }
        });

        jLabel3.setText("TOTAL PRICE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(tfTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(tfquotationID, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(btnSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfquotationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents
private String searchQuotationIDinFile(String quotationIDsearch) {
     try (BufferedReader br = new BufferedReader(new FileReader("salesOrder.txt"))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                String quotationIDFromFile = parts[7].trim();
                if (quotationIDFromFile.equals(quotationIDsearch)) {
                    System.out.println("Quotation found:\n" + line);
                    return line; // Return the details of the sales order
                }
            }

        } catch (IOException e) {
            e.printStackTrace(); // Handle the exception according to your needs
        }

        System.out.println("Quotation with ID " + quotationIDsearch + " not found!!");
        return null; // Order ID not found in the file or an error occurred
    }
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String quotationIDsearch = tfquotationID.getText();
        List searchQuotationDetails = SalesOrder.searchQuotationIDinFile(quotationIDsearch);
        
        if(searchQuotationDetails != null){
            JOptionPane.showMessageDialog(this, "Quotation Found!");
            updateTable(searchQuotationDetails);
        }
        else{
            JOptionPane.showMessageDialog(this, "Quotation Not Found!");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tfquotationIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfquotationIDActionPerformed
        // TODO add your handling code here:
        String quotationIDsearch = tfquotationID.getText();
    }//GEN-LAST:event_tfquotationIDActionPerformed

    private void tfTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTotalPriceActionPerformed
private void updateTable(List<SalesOrder> data) {
    temp.setRowCount(0);
    double totalQuotationPrice = 0.0;
    for (SalesOrder sales : data) {
        Object[] row = new Object[7];
        row[0] = sales.getId();
        row[1] = sales.getFurniture();
        row[2] = sales.getQuantity();
        
        Furniture matchingFurniture = findFurnitureById(sales.getFurniture());
        
        if (matchingFurniture != null) {
            row[3] = matchingFurniture.getPrice();
        } else {
            row[3] = ""; // Set as empty if furniture is not found
        }

        row[4] = sales.getTotal();
        row[5] = sales.getCustomer();
        row[6] = sales.getquotation();

        temp.addRow(row);
        //Add the total price 
        totalQuotationPrice +=sales.getTotal();
        
        //Set tfTotalPrice to totalQuotationPrice
        tfTotalPrice.setText(String.valueOf(totalQuotationPrice));
    }
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblQuotation;
    private javax.swing.JTextField tfTotalPrice;
    private javax.swing.JTextField tfquotationID;
    // End of variables declaration//GEN-END:variables
}
