/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interface;

import Classes.Officer;
import Classes.SalesPerson;
import Classes.User;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author damonng
 */
public class StaffList extends javax.swing.JPanel {
    MainPage parent;
    User selectedWorker;
    private DefaultTableModel helper;
    private JButton btnInspect;
    private static List<Officer> officers;
    private static List<SalesPerson> salesPeople;
    private static List<User> workers;
    /**
     * Creates new form StaffList
     */
    public StaffList(){
        initComponents();
    }
    /**
     * 
     * @param parent to reuse the generated main page and its attributes
     */
    public StaffList(MainPage parent) {
        initComponents();
        this.parent = parent;
        officers = Officer.officers;
        salesPeople = SalesPerson.salesPeople;
        if(officers!=null && salesPeople!=null){
            workers = new ArrayList<>();
            btnInspect = new JButton();
            workers.addAll(officers);
            workers.addAll(salesPeople);
            populateTable();
            tblworkers.getColumn("Action").setCellRenderer( new ButtonRenderer());
            tblworkers.getColumn("Action").setCellEditor( new ButtonEditor(new JCheckBox()));
            btnInspect.addActionListener((ActionEvent event) -> {
                int row = tblworkers.getSelectedRow();
                String id = (String) tblworkers.getValueAt(row, 0);
                workers.stream()
                .filter(worker -> worker.getId().equals(id))
                .findFirst()
                .ifPresent(worker -> selectedWorker = worker);
            });
        }
    }


    public void populateTable(){
        this.helper = (DefaultTableModel) tblworkers.getModel();
        helper.setRowCount(0);
        System.out.println(helper.getRowCount());
        Object row[] = new Object[5]; 
        for (User worker : workers) {
            //add to new temp table if room is available
            row[0] = worker.getId();
            row[1] = worker.getFullName();
            row[2] = worker.getMail();
            helper.addRow(row);

            
        }
        System.out.println(helper.getRowCount());

    }
    class ButtonRenderer extends JButton implements TableCellRenderer{
        public ButtonRenderer(){
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null)? "btnInspect" : value.toString());
            return this;
        }

    }
    class ButtonEditor extends DefaultCellEditor{
        private String label;
        
        public ButtonEditor(JCheckBox checkbox){
           super(checkbox);
        }
        
        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            label = (value == null) ? "Inspect" : value.toString();
            btnInspect.setText(label);
            return btnInspect;
        }

        @Override
        public Object getCellEditorValue() {
            return label;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblworkers = new javax.swing.JTable();
        title = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        tblworkers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Email", "Title 4", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblworkers.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblworkers);
        if (tblworkers.getColumnModel().getColumnCount() > 0) {
            tblworkers.getColumnModel().getColumn(0).setResizable(false);
            tblworkers.getColumnModel().getColumn(2).setResizable(false);
            tblworkers.getColumnModel().getColumn(4).setResizable(false);
        }

        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Staff List");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        populateTable();
        System.out.println("reloaded");
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblworkers;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
